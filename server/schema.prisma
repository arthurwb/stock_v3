// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model tOptions {
  id                String              @id @default(cuid())
  optionName        String              @default("")
  optionDescription String              @default("")
  optionPrice       Decimal             @mysql.Decimal(10, 2)
  historicalPrices  tHistoricalPrices[] @relation("tHistoricalPrices_optionId")
  optionCarrots     tCarrots[]          @relation("tCarrots_optionId")
  userQueue         tUserQueue[]        @relation("tUserQueue_uqOptionId")
  eventQueue        tEventQueue[]       @relation("tEventQueue_eqEfectedOptionIds")
}

model tHistoricalPrices {
  id                   String    @id @default(cuid())
  optionId             tOptions? @relation("tHistoricalPrices_optionId", fields: [optionIdId], references: [id])
  optionIdId           String?   @map("optionId")
  historicalPrice      Decimal   @mysql.Decimal(10, 2)
  historicalPriceStamp DateTime? @default(now())

  @@index([optionIdId])
}

model tUsers {
  id           String       @id @default(cuid())
  userEmail    String       @unique @default("")
  userUsername String       @unique @default("")
  userPassword String
  userWallet   Decimal      @mysql.Decimal(10, 2)
  userCarrots  tCarrots[]   @relation("tCarrots_userId")
  userQueue    tUserQueue[] @relation("tUserQueue_uqUserId")
}

model tCarrots {
  id                  String    @id @default(cuid())
  userId              tUsers?   @relation("tCarrots_userId", fields: [userIdId], references: [id])
  userIdId            String?   @map("userId")
  optionId            tOptions? @relation("tCarrots_optionId", fields: [optionIdId], references: [id])
  optionIdId          String?   @map("optionId")
  carrotPurchasePrice Decimal   @mysql.Decimal(10, 2)
  carrotDatePurchased DateTime? @default(now())

  @@index([userIdId])
  @@index([optionIdId])
}

model tUserQueue {
  id                String    @id @default(cuid())
  uqType            String    @default("")
  uqOptionId        tOptions? @relation("tUserQueue_uqOptionId", fields: [uqOptionIdId], references: [id])
  uqOptionIdId      String?   @map("uqOptionId")
  uqUserId          tUsers?   @relation("tUserQueue_uqUserId", fields: [uqUserIdId], references: [id])
  uqUserIdId        String?   @map("uqUserId")
  uqCount           Int?      @default(1)
  uqTransactionDate DateTime? @default(now())
  uqComplete        Boolean   @default(false)

  @@index([uqOptionIdId])
  @@index([uqUserIdId])
}

model tEventQueue {
  id                 String     @id @default(cuid())
  eqType             String     @default("")
  eqEffects          String     @default("")
  eqEfectedOptionIds tOptions[] @relation("tEventQueue_eqEfectedOptionIds")
  eqStartDate        DateTime
  eqCreationData     DateTime   @default(now())
  eqComplete         Boolean    @default(false)
}

model tMarket {
  id           String @id @default(cuid())
  mName        String @default("")
  mType        String @default("")
  mActiveEvent String @default("")
}
